{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Yaron/hybrid-eindopdracht/src/app/cardio/page.tsx"],"sourcesContent":["import { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Table, TableHeader, TableRow, TableHead, TableBody, TableCell } from \"@/components/ui/table\";\r\nimport { ChartComponent } from \"@/app/components/Chart\";\r\n\r\nconst recentActivities = [\r\n    { type: \"Run\", distance: 10.2, time: \"45:30\", date: \"2025-02-16\" },\r\n    { type: \"Swim\", distance: 1.5, time: \"30:10\", date: \"2025-02-15\" },\r\n    { type: \"Ride\", distance: 25.4, time: \"1:15:20\", date: \"2025-02-14\" },\r\n    { type: \"Run\", distance: 5.3, time: \"28:45\", date: \"2025-02-13\" },\r\n];\r\n\r\nconst totalDistances = {\r\n    Run: recentActivities.filter(a => a.type === \"Run\").reduce((sum, a) => sum + a.distance, 0),\r\n    Swim: recentActivities.filter(a => a.type === \"Swim\").reduce((sum, a) => sum + a.distance, 0),\r\n    Ride: recentActivities.filter(a => a.type === \"Ride\").reduce((sum, a) => sum + a.distance, 0),\r\n};\r\n\r\nconst chartData = [\r\n    { name: \"Runs\", value: totalDistances.Run },\r\n    { name: \"Swims\", value: totalDistances.Swim },\r\n    { name: \"Rides\", value: totalDistances.Ride },\r\n];\r\n\r\nexport default function Page() {\r\n    return (\r\n        <div className=\"p-6 space-y-6\">\r\n            <h1 className=\"text-4xl font-bold\">Cardio Dashboard</h1>\r\n            \r\n            <div className=\"flex gap-6\">\r\n                <Card className=\"flex-1\">\r\n                    <CardContent className=\"p-4\">\r\n                    <Table>\r\n                    <TableHeader>\r\n                        <TableRow>\r\n                            <TableHead>Activity</TableHead>\r\n                            <TableHead>Distance (km)</TableHead>\r\n                        </TableRow>\r\n                    </TableHeader>\r\n                    <TableBody>\r\n                        <TableRow>\r\n                            <TableCell>Run</TableCell>\r\n                            <TableCell>{totalDistances.Run} km</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell>Swim</TableCell>\r\n                            <TableCell>{totalDistances.Swim} km</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell>Ride</TableCell>\r\n                            <TableCell>{totalDistances.Ride} km</TableCell>\r\n                        </TableRow>\r\n                    </TableBody>\r\n                </Table>\r\n                    </CardContent>\r\n                </Card>\r\n                \r\n                <Card className=\"w-1/3\">\r\n                    <CardContent className=\"p-4\">\r\n                        <h3 className=\"text-lg font-medium mb-4\">Cardio Activity Summary</h3>\r\n                        <ChartComponent />\r\n                    </CardContent>\r\n                </Card>\r\n            </div>\r\n            \r\n            <Card>\r\n                <CardContent className=\"p-4\">\r\n                    <h3 className=\"text-lg font-medium mb-4\">Recent Activities</h3>\r\n                    <Table>\r\n                        <TableHeader>\r\n                            <TableRow>\r\n                                <TableHead>Type</TableHead>\r\n                                <TableHead>Distance (km)</TableHead>\r\n                                <TableHead>Time</TableHead>\r\n                                <TableHead>Date</TableHead>\r\n                            </TableRow>\r\n                        </TableHeader>\r\n                        <TableBody>\r\n                            {recentActivities.map((activity, index) => (\r\n                                <TableRow key={index}>\r\n                                    <TableCell>{activity.type}</TableCell>\r\n                                    <TableCell>{activity.distance}</TableCell>\r\n                                    <TableCell>{activity.time}</TableCell>\r\n                                    <TableCell>{activity.date}</TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAIA,MAAM,mBAAmB;IACrB;QAAE,MAAM;QAAO,UAAU;QAAM,MAAM;QAAS,MAAM;IAAa;IACjE;QAAE,MAAM;QAAQ,UAAU;QAAK,MAAM;QAAS,MAAM;IAAa;IACjE;QAAE,MAAM;QAAQ,UAAU;QAAM,MAAM;QAAW,MAAM;IAAa;IACpE;QAAE,MAAM;QAAO,UAAU;QAAK,MAAM;QAAS,MAAM;IAAa;CACnE;AAED,MAAM,iBAAiB;IACnB,KAAK,iBAAiB,MAAM,CAAC,CAAA,IAAK,EAAE,IAAI,KAAK,OAAO,MAAM,CAAC,CAAC,KAAK,IAAM,MAAM,EAAE,QAAQ,EAAE;IACzF,MAAM,iBAAiB,MAAM,CAAC,CAAA,IAAK,EAAE,IAAI,KAAK,QAAQ,MAAM,CAAC,CAAC,KAAK,IAAM,MAAM,EAAE,QAAQ,EAAE;IAC3F,MAAM,iBAAiB,MAAM,CAAC,CAAA,IAAK,EAAE,IAAI,KAAK,QAAQ,MAAM,CAAC,CAAC,KAAK,IAAM,MAAM,EAAE,QAAQ,EAAE;AAC/F;AAEA,MAAM,YAAY;IACd;QAAE,MAAM;QAAQ,OAAO,eAAe,GAAG;IAAC;IAC1C;QAAE,MAAM;QAAS,OAAO,eAAe,IAAI;IAAC;IAC5C;QAAE,MAAM;QAAS,OAAO,eAAe,IAAI;IAAC;CAC/C;AAEc,SAAS;IACpB,qBACI,8OAAC;QAAI,WAAU;;0BACX,8OAAC;gBAAG,WAAU;0BAAqB;;;;;;0BAEnC,8OAAC;gBAAI,WAAU;;kCACX,8OAAC;wBAAK,WAAU;kCACZ,cAAA,8OAAC;4BAAY,WAAU;sCACvB,cAAA,8OAAC;;kDACD,8OAAC;kDACG,cAAA,8OAAC;;8DACG,8OAAC;8DAAU;;;;;;8DACX,8OAAC;8DAAU;;;;;;;;;;;;;;;;;kDAGnB,8OAAC;;0DACG,8OAAC;;kEACG,8OAAC;kEAAU;;;;;;kEACX,8OAAC;;4DAAW,eAAe,GAAG;4DAAC;;;;;;;;;;;;;0DAEnC,8OAAC;;kEACG,8OAAC;kEAAU;;;;;;kEACX,8OAAC;;4DAAW,eAAe,IAAI;4DAAC;;;;;;;;;;;;;0DAEpC,8OAAC;;kEACG,8OAAC;kEAAU;;;;;;kEACX,8OAAC;;4DAAW,eAAe,IAAI;4DAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAO5C,8OAAC;wBAAK,WAAU;kCACZ,cAAA,8OAAC;4BAAY,WAAU;;8CACnB,8OAAC;oCAAG,WAAU;8CAA2B;;;;;;8CACzC,8OAAC;;;;;;;;;;;;;;;;;;;;;;0BAKb,8OAAC;0BACG,cAAA,8OAAC;oBAAY,WAAU;;sCACnB,8OAAC;4BAAG,WAAU;sCAA2B;;;;;;sCACzC,8OAAC;;8CACG,8OAAC;8CACG,cAAA,8OAAC;;0DACG,8OAAC;0DAAU;;;;;;0DACX,8OAAC;0DAAU;;;;;;0DACX,8OAAC;0DAAU;;;;;;0DACX,8OAAC;0DAAU;;;;;;;;;;;;;;;;;8CAGnB,8OAAC;8CACI,iBAAiB,GAAG,CAAC,CAAC,UAAU,sBAC7B,8OAAC;;8DACG,8OAAC;8DAAW,SAAS,IAAI;;;;;;8DACzB,8OAAC;8DAAW,SAAS,QAAQ;;;;;;8DAC7B,8OAAC;8DAAW,SAAS,IAAI;;;;;;8DACzB,8OAAC;8DAAW,SAAS,IAAI;;;;;;;2CAJd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAa/C"}},
    {"offset": {"line": 380, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 391, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 391, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 397, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Yaron/hybrid-eindopdracht/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind'\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR'\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: any\ndeclare const __next_app_load_chunk__: any\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base'\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AA0BA,8BAA8B;AAzB9B,SAASA,kBAAkB,QAAQ,2DAA2D;IAAE,wBAAwB;AAAW,EAAC;AAYpI,yEAAyE;AAEzE,cAAc;AAGd,SAASE,IAAI,EAAEC,KAAK,GAAE;AAWtB,OAAO,MAAMG,eAAe;AAG5B,EAAC;;;;;;;;;;AAED,cAAc,qCAAoC,sBAAA;AAElD,UAAA,kDAA4D;AAC5D,MAAA,CAAO,MAAMK;IAAAA;IAAAA,SAAc,IAAIX,mBAAmB;YAChDY,QAAAA;YAAAA,GAAY;YAAA;wBACVC,IAAAA;oBAAAA,CAAMZ,UAAUa;oBAAAA,OAAQ;yBACxBC,MAAM;8BACNC,IAAAA,CAAAA,GAAU;wBAAA,QAAA;4BAAA,IAAA;4BAAA;yBAAA;;uBACV,2CAA2C;;iBAC3CC,YAAY;sBACZC,IAAAA,CAAAA;YAAAA,CAAU;SAAA;;SACVC,UAAU,EAAE;UACd,QAAA;YAAA,MAAA;gBACAC,OAAU,QAAA;wBAAA;4BACRC,KAAAA,CAAAA,GAAAA,IAAYnB,uKAAZmB,CAAAA,sBAAYnB,EAAAA,MAAAA,MAAAA,MAAAA,EAAAA,iBAAAA,CAAAA,CAAAA,EAAAA,iTAAAA,CAAAA,UAAAA,CAAAA,GAAAA,CAAAA,KAAAA,CAAAA,KAAAA,MAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA;4BACd,OAAA,GAAA,iTAAA,CAAA,UAAA,CAAA,KAAA,CAAA,CAAA,EAAA,iTAAA,CAAA,UAAA,CAAA,MAAA,EAAA;4BACA,MAAA,CAAA,YAAA,CAAA","ignoreList":[0]}},
    {"offset": {"line": 502, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}