{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Yaron/hybrid-eindopdracht/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Card = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCard.displayName = \"Card\"\r\n\r\nconst CardHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardHeader.displayName = \"CardHeader\"\r\n\r\nconst CardTitle = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-2xl font-semibold leading-none tracking-tight\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCardTitle.displayName = \"CardTitle\"\r\n\r\nconst CardDescription = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardDescription.displayName = \"CardDescription\"\r\n\r\nconst CardContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n))\r\nCardContent.displayName = \"CardContent\"\r\n\r\nconst CardFooter = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex items-center p-6 pt-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardFooter.displayName = \"CardFooter\"\r\n\r\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\r\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,8JAAM,UAAU,MAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,8JAAM,UAAU,OAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,8JAAM,UAAU,OAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,8JAAM,UAAU,OAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,8JAAM,UAAU,OAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,8JAAM,UAAU,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG"}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Yaron/hybrid-eindopdracht/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAEA;AAGA;AAFA;AAHA;;;;;AAOA,MAAM,OAAO,oKAAc,IAAI;AAE/B,MAAM,yBAAW,8JAAM,UAAU,MAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAc,IAAI;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8FACA;QAED,GAAG,KAAK;;;;;;;AAGb,SAAS,WAAW,GAAG,oKAAc,IAAI,CAAC,WAAW;AAErD,MAAM,4BAAc,8JAAM,UAAU,OAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAc,OAAO;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,uYACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,oKAAc,OAAO,CAAC,WAAW;AAE3D,MAAM,4BAAc,8JAAM,UAAU,OAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAc,OAAO;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,oKAAc,OAAO,CAAC,WAAW"}},
    {"offset": {"line": 170, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 176, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Yaron/hybrid-eindopdracht/src/db/client.ts"],"sourcesContent":["import { neon } from \"@neondatabase/serverless\";\r\nimport { drizzle } from \"drizzle-orm/neon-http\";\r\nimport * as schema from \"./schema\";\r\nimport { createClient } from 'some-db-client';\r\n\r\nconst db = createClient({\r\n  connectionString: process.env.DATABASE_URL,\r\n});\r\n\r\nexport { db };"],"names":[],"mappings":";;;;;;;;AAMoB;;AADpB,MAAM,KAAK,aAAa;IACtB,kBAAkB,gKAAA,CAAA,UAAO,CAAC,GAAG,CAAC,YAAY;AAC5C"}},
    {"offset": {"line": 193, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 199, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Yaron/hybrid-eindopdracht/src/db/schema/workouts.ts"],"sourcesContent":["import { pgTable, serial, text, integer, real, uuid } from \"drizzle-orm/pg-core\";\r\n\r\n// Users Table\r\nexport const users = pgTable(\"users\", {\r\n  id: uuid(\"id\").defaultRandom().primaryKey(),\r\n  username: text(\"username\").notNull().unique(),\r\n  email: text(\"email\").notNull().unique(),\r\n  passwordHash: text(\"password_hash\").notNull(),\r\n});\r\n\r\nexport const workouts = pgTable(\"workouts\", {\r\n  id: serial(\"id\").primaryKey(),\r\n  userId: uuid(\"user_id\").references(() => users.id, { onDelete: \"cascade\" }),\r\n  name: text(\"name\").notNull(), \r\n  createdAt: text(\"created_at\").default('now()'),\r\n});\r\n\r\nexport const exercises = pgTable(\"exercises\", {\r\n  id: serial(\"id\").primaryKey(),\r\n  name: text(\"name\").notNull().unique(), \r\n});\r\n\r\nexport const workoutExercises = pgTable(\"workout_exercises\", {\r\n  id: serial(\"id\").primaryKey(),\r\n  workoutId: integer(\"workout_id\").references(() => workouts.id, { onDelete: \"cascade\" }),\r\n  exerciseId: integer(\"exercise_id\").references(() => exercises.id, { onDelete: \"cascade\" }),\r\n  weight: real(\"weight\"),\r\n  sets: integer(\"sets\").notNull(),\r\n  reps: integer(\"reps\").notNull(),\r\n});\r\n"],"names":[],"mappings":";;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAGO,MAAM,QAAQ,CAAA,GAAA,wJAAA,CAAA,UAAO,AAAD,EAAE,SAAS;IACpC,IAAI,CAAA,GAAA,kKAAA,CAAA,OAAI,AAAD,EAAE,MAAM,aAAa,GAAG,UAAU;IACzC,UAAU,CAAA,GAAA,kKAAA,CAAA,OAAI,AAAD,EAAE,YAAY,OAAO,GAAG,MAAM;IAC3C,OAAO,CAAA,GAAA,kKAAA,CAAA,OAAI,AAAD,EAAE,SAAS,OAAO,GAAG,MAAM;IACrC,cAAc,CAAA,GAAA,kKAAA,CAAA,OAAI,AAAD,EAAE,iBAAiB,OAAO;AAC7C;AAEO,MAAM,WAAW,CAAA,GAAA,wJAAA,CAAA,UAAO,AAAD,EAAE,YAAY;IAC1C,IAAI,CAAA,GAAA,oKAAA,CAAA,SAAM,AAAD,EAAE,MAAM,UAAU;IAC3B,QAAQ,CAAA,GAAA,kKAAA,CAAA,OAAI,AAAD,EAAE,WAAW,UAAU,CAAC,IAAM,MAAM,EAAE,EAAE;QAAE,UAAU;IAAU;IACzE,MAAM,CAAA,GAAA,kKAAA,CAAA,OAAI,AAAD,EAAE,QAAQ,OAAO;IAC1B,WAAW,CAAA,GAAA,kKAAA,CAAA,OAAI,AAAD,EAAE,cAAc,OAAO,CAAC;AACxC;AAEO,MAAM,YAAY,CAAA,GAAA,wJAAA,CAAA,UAAO,AAAD,EAAE,aAAa;IAC5C,IAAI,CAAA,GAAA,oKAAA,CAAA,SAAM,AAAD,EAAE,MAAM,UAAU;IAC3B,MAAM,CAAA,GAAA,kKAAA,CAAA,OAAI,AAAD,EAAE,QAAQ,OAAO,GAAG,MAAM;AACrC;AAEO,MAAM,mBAAmB,CAAA,GAAA,wJAAA,CAAA,UAAO,AAAD,EAAE,qBAAqB;IAC3D,IAAI,CAAA,GAAA,oKAAA,CAAA,SAAM,AAAD,EAAE,MAAM,UAAU;IAC3B,WAAW,CAAA,GAAA,qKAAA,CAAA,UAAO,AAAD,EAAE,cAAc,UAAU,CAAC,IAAM,SAAS,EAAE,EAAE;QAAE,UAAU;IAAU;IACrF,YAAY,CAAA,GAAA,qKAAA,CAAA,UAAO,AAAD,EAAE,eAAe,UAAU,CAAC,IAAM,UAAU,EAAE,EAAE;QAAE,UAAU;IAAU;IACxF,QAAQ,CAAA,GAAA,kKAAA,CAAA,OAAI,AAAD,EAAE;IACb,MAAM,CAAA,GAAA,qKAAA,CAAA,UAAO,AAAD,EAAE,QAAQ,OAAO;IAC7B,MAAM,CAAA,GAAA,qKAAA,CAAA,UAAO,AAAD,EAAE,QAAQ,OAAO;AAC/B"}},
    {"offset": {"line": 245, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 251, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 256, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 271, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Yaron/hybrid-eindopdracht/src/app/actions.tsx"],"sourcesContent":["import { config } from 'dotenv';\r\nconfig();\r\n\r\nimport { db } from \"@/db/client\"; \r\nimport { workouts, workoutExercises, exercises } from \"@/db/schema\";\r\nimport { eq, and } from \"drizzle-orm\";\r\n\r\nexport async function getTodaysWorkout(userId: string) {\r\n  const dayOfWeek = new Date().toLocaleString('en-US', { weekday: 'long' }); // Gets the full name of the day (e.g., \"Monday\")\r\n\r\n  return await db\r\n    .select()\r\n    .from(workouts)\r\n    .where(and(eq(workouts.userId, userId), eq(workouts.name, dayOfWeek))); \r\n}\r\n\r\nexport async function getTodaysExercises(workoutId: number) {\r\n  return await db\r\n    .select({\r\n      id: workoutExercises.id,\r\n      name: exercises.name,\r\n      weight: workoutExercises.weight,\r\n      sets: workoutExercises.sets,\r\n      reps: workoutExercises.reps,\r\n    })\r\n    .from(workoutExercises)\r\n    .where(eq(workoutExercises.workoutId, workoutId))\r\n    .innerJoin(exercises, eq(workoutExercises.exerciseId, exercises.id)); \r\n}\r\n\r\n\r\nexport async function getWorkoutFromDay(userId: string, day: string) {\r\n  return await db\r\n    .select()\r\n    .from(workouts)\r\n    .where(and(eq(workouts.userId, userId), eq(workouts.name, day))); \r\n}\r\n\r\nexport async function getExercisesFromWorkout(workoutId: number) {\r\n  return await db\r\n    .select({\r\n      id: workoutExercises.id,\r\n      name: exercises.name,\r\n      weight: workoutExercises.weight,\r\n      sets: workoutExercises.sets,\r\n      reps: workoutExercises.reps,\r\n    })\r\n    .from(workoutExercises)\r\n    .where(eq(workoutExercises.workoutId, workoutId))\r\n    .innerJoin(exercises, eq(workoutExercises.exerciseId, exercises.id)); \r\n}"],"names":[],"mappings":";;;;;;AAAA;AAGA;AACA;AAAA;AACA;;AAJA,CAAA,GAAA,wIAAA,CAAA,SAAM,AAAD;;;;AAME,eAAe,iBAAiB,MAAc;IACnD,MAAM,YAAY,IAAI,OAAO,cAAc,CAAC,SAAS;QAAE,SAAS;IAAO,IAAI,iDAAiD;IAE5H,OAAO,MAAM,sHAAA,CAAA,KAAE,CACZ,MAAM,GACN,IAAI,CAAC,kIAAA,CAAA,WAAQ,EACb,KAAK,CAAC,CAAA,GAAA,qKAAA,CAAA,MAAG,AAAD,EAAE,CAAA,GAAA,qKAAA,CAAA,KAAE,AAAD,EAAE,kIAAA,CAAA,WAAQ,CAAC,MAAM,EAAE,SAAS,CAAA,GAAA,qKAAA,CAAA,KAAE,AAAD,EAAE,kIAAA,CAAA,WAAQ,CAAC,IAAI,EAAE;AAC9D;AAEO,eAAe,mBAAmB,SAAiB;IACxD,OAAO,MAAM,sHAAA,CAAA,KAAE,CACZ,MAAM,CAAC;QACN,IAAI,kIAAA,CAAA,mBAAgB,CAAC,EAAE;QACvB,MAAM,kIAAA,CAAA,YAAS,CAAC,IAAI;QACpB,QAAQ,kIAAA,CAAA,mBAAgB,CAAC,MAAM;QAC/B,MAAM,kIAAA,CAAA,mBAAgB,CAAC,IAAI;QAC3B,MAAM,kIAAA,CAAA,mBAAgB,CAAC,IAAI;IAC7B,GACC,IAAI,CAAC,kIAAA,CAAA,mBAAgB,EACrB,KAAK,CAAC,CAAA,GAAA,qKAAA,CAAA,KAAE,AAAD,EAAE,kIAAA,CAAA,mBAAgB,CAAC,SAAS,EAAE,YACrC,SAAS,CAAC,kIAAA,CAAA,YAAS,EAAE,CAAA,GAAA,qKAAA,CAAA,KAAE,AAAD,EAAE,kIAAA,CAAA,mBAAgB,CAAC,UAAU,EAAE,kIAAA,CAAA,YAAS,CAAC,EAAE;AACtE;AAGO,eAAe,kBAAkB,MAAc,EAAE,GAAW;IACjE,OAAO,MAAM,sHAAA,CAAA,KAAE,CACZ,MAAM,GACN,IAAI,CAAC,kIAAA,CAAA,WAAQ,EACb,KAAK,CAAC,CAAA,GAAA,qKAAA,CAAA,MAAG,AAAD,EAAE,CAAA,GAAA,qKAAA,CAAA,KAAE,AAAD,EAAE,kIAAA,CAAA,WAAQ,CAAC,MAAM,EAAE,SAAS,CAAA,GAAA,qKAAA,CAAA,KAAE,AAAD,EAAE,kIAAA,CAAA,WAAQ,CAAC,IAAI,EAAE;AAC9D;AAEO,eAAe,wBAAwB,SAAiB;IAC7D,OAAO,MAAM,sHAAA,CAAA,KAAE,CACZ,MAAM,CAAC;QACN,IAAI,kIAAA,CAAA,mBAAgB,CAAC,EAAE;QACvB,MAAM,kIAAA,CAAA,YAAS,CAAC,IAAI;QACpB,QAAQ,kIAAA,CAAA,mBAAgB,CAAC,MAAM;QAC/B,MAAM,kIAAA,CAAA,mBAAgB,CAAC,IAAI;QAC3B,MAAM,kIAAA,CAAA,mBAAgB,CAAC,IAAI;IAC7B,GACC,IAAI,CAAC,kIAAA,CAAA,mBAAgB,EACrB,KAAK,CAAC,CAAA,GAAA,qKAAA,CAAA,KAAE,AAAD,EAAE,kIAAA,CAAA,mBAAgB,CAAC,SAAS,EAAE,YACrC,SAAS,CAAC,kIAAA,CAAA,YAAS,EAAE,CAAA,GAAA,qKAAA,CAAA,KAAE,AAAD,EAAE,kIAAA,CAAA,mBAAgB,CAAC,UAAU,EAAE,kIAAA,CAAA,YAAS,CAAC,EAAE;AACtE"}},
    {"offset": {"line": 317, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 323, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Yaron/hybrid-eindopdracht/src/app/planner/page.tsx"],"sourcesContent":["'use client'\r\nimport { useState } from \"react\";\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\r\nimport { getTodaysWorkout, getTodaysExercises } from \"@/app/actions\";\r\n\r\nconst days = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\r\n\r\nexport default async function WeekPlanner() {\r\n    const userId = \"557827b2-a6e2-49b9-9016-1d3bcf6a6422\";\r\n    const [selectedDay, setSelectedDay] = useState(\"Monday\");\r\n    const [workoutsByDay, setWorkoutsByDay] = useState<{ [key: string]: Array<any> }>({});\r\n\r\n\r\n    return (\r\n        <div className=\"space-y-8 p-6\">\r\n            <h1 className=\"text-4xl font-bold\">Week Planner</h1>\r\n            <Tabs defaultValue=\"Monday\" className=\"w-full\">\r\n                <TabsList className=\"grid grid-cols-7\">\r\n                    {days.map(day => (\r\n                        <TabsTrigger\r\n                            key={day}\r\n                            value={day}\r\n                            onClick={() => setSelectedDay(day)}\r\n                        >\r\n                            {day}\r\n                        </TabsTrigger>\r\n                    ))}\r\n                </TabsList>\r\n                {days.map(day => (\r\n                    <TabsContent key={day} value={day}>\r\n                        <Card>\r\n                            <CardHeader>\r\n                                <CardTitle>{day}</CardTitle>\r\n                            </CardHeader>\r\n                            <CardContent className=\"space-y-4\">\r\n                                {/* {workoutsByDay[day]?.map((workout) => (\r\n                                    <div key={workout.id} className=\"mb-4\">\r\n                                        <h3 className=\"font-medium text-lg mb-2\">{workout.name}</h3>\r\n                                        <ul className=\"list-disc pl-5 space-y-2\">\r\n                                            {workout.exercises.map((exercise: { id: Key | null | undefined; name: string | number | bigint | boolean | ReactElement<unknown, string | JSXElementConstructor<any>> | Iterable<ReactNode> | ReactPortal | Promise<string | number | bigint | boolean | ReactPortal | ReactElement<unknown, string | JSXElementConstructor<any>> | Iterable<ReactNode> | null | undefined> | null | undefined; sets: string | number | bigint | boolean | ReactElement<unknown, string | JSXElementConstructor<any>> | Iterable<ReactNode> | ReactPortal | Promise<string | number | bigint | boolean | ReactPortal | ReactElement<unknown, string | JSXElementConstructor<any>> | Iterable<ReactNode> | null | undefined> | null | undefined; reps: string | number | bigint | boolean | ReactElement<unknown, string | JSXElementConstructor<any>> | Iterable<ReactNode> | ReactPortal | Promise<string | number | bigint | boolean | ReactPortal | ReactElement<unknown, string | JSXElementConstructor<any>> | Iterable<ReactNode> | null | undefined> | null | undefined; weight: string | number | bigint | boolean | ReactElement<unknown, string | JSXElementConstructor<any>> | Iterable<ReactNode> | ReactPortal | Promise<string | number | bigint | boolean | ReactPortal | ReactElement<unknown, string | JSXElementConstructor<any>> | Iterable<ReactNode> | null | undefined> | null | undefined; }) => (\r\n                                                <li key={exercise.id} className=\"text-sm\">\r\n                                                    <span className=\"font-medium\">{exercise.name}</span>\r\n                                                    <span> - {exercise.sets}x{exercise.reps}</span>\r\n                                                    {exercise.weight && <span> @ {exercise.weight}kg</span>}\r\n                                                </li>\r\n                                            ))}\r\n                                        </ul>\r\n                                    </div>\r\n                                ))} */}\r\n                                {!workoutsByDay[day]?.length && (\r\n                                    <p className=\"text-gray-500\">No workouts planned for this day</p>\r\n                                )}\r\n                            </CardContent>\r\n                        </Card>\r\n                    </TabsContent>\r\n                ))}\r\n\r\n                {(await getTodaysWorkout('557827b2-a6e2-49b9-9016-1d3bcf6a6422')).map(async workout => (\r\n                    <div>\r\n                        <p key={workout.id}>{workout.name}</p>\r\n                        {await getTodaysExercises(workout.id).then(exercises => (\r\n                            exercises.map(exercise => (\r\n                                <p key={exercise.id}>\r\n                                    {exercise.name}: {exercise.weight}kg {exercise.sets} sets of {exercise.reps} reps</p>\r\n                            ))\r\n                        ))}\r\n                    </div>\r\n                ))}\r\n            </Tabs>\r\n        </div>\r\n    );\r\n}"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;;;AAJA;;;;;AAMA,MAAM,OAAO;IAAC;IAAU;IAAW;IAAa;IAAY;IAAU;IAAY;CAAS;AAE5E,eAAe;;IAC1B,MAAM,SAAS;IACf,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiC,CAAC;IAGnF,qBACI,6LAAC;QAAI,WAAU;;0BACX,6LAAC;gBAAG,WAAU;0BAAqB;;;;;;0BACnC,6LAAC,mIAAA,CAAA,OAAI;gBAAC,cAAa;gBAAS,WAAU;;kCAClC,6LAAC,mIAAA,CAAA,WAAQ;wBAAC,WAAU;kCACf,KAAK,GAAG,CAAC,CAAA,oBACN,6LAAC,mIAAA,CAAA,cAAW;gCAER,OAAO;gCACP,SAAS,IAAM,eAAe;0CAE7B;+BAJI;;;;;;;;;;oBAQhB,KAAK,GAAG,CAAC,CAAA,oBACN,6LAAC,mIAAA,CAAA,cAAW;4BAAW,OAAO;sCAC1B,cAAA,6LAAC,mIAAA,CAAA,OAAI;;kDACD,6LAAC,mIAAA,CAAA,aAAU;kDACP,cAAA,6LAAC,mIAAA,CAAA,YAAS;sDAAE;;;;;;;;;;;kDAEhB,6LAAC,mIAAA,CAAA,cAAW;wCAAC,WAAU;kDAelB,CAAC,aAAa,CAAC,IAAI,EAAE,wBAClB,6LAAC;4CAAE,WAAU;sDAAgB;;;;;;;;;;;;;;;;;2BArB3B;;;;;oBA4BrB,CAAC,MAAM,CAAA,GAAA,yHAAA,CAAA,mBAAgB,AAAD,EAAE,uCAAuC,EAAE,GAAG,CAAC,OAAM,wBACxE,6LAAC;;8CACG,6LAAC;8CAAoB,QAAQ,IAAI;mCAAzB,QAAQ,EAAE;;;;;gCACjB,MAAM,CAAA,GAAA,yHAAA,CAAA,qBAAkB,AAAD,EAAE,QAAQ,EAAE,EAAE,IAAI,CAAC,CAAA,YACvC,UAAU,GAAG,CAAC,CAAA,yBACV,6LAAC;;gDACI,SAAS,IAAI;gDAAC;gDAAG,SAAS,MAAM;gDAAC;gDAAI,SAAS,IAAI;gDAAC;gDAAU,SAAS,IAAI;gDAAC;;2CADxE,SAAS,EAAE;;;;;;;;;;;;;;;;;;;;;;;AASnD;GAhE8B;KAAA"}},
    {"offset": {"line": 477, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}